MicroeDoc - Portal de Recibos de Pago
<img alt="MicroeDoc Logo" src="https://microedoc.com/wp-content/uploads/2022/09/1.-Logo-MicroeDoc-color-2.png">
📋 Descripción
Portal de visualización de recibos de pago para empleados. Esta aplicación permite a los usuarios autenticarse y consultar sus recibos de pago de forma segura y sencilla.

✅ Características principales
Autenticación segura de usuarios
Dashboard con información relevante
Visualización de recibos de pago con filtros y búsqueda
Detalle completo de cada recibo
Interfaz responsive adaptada a todos los dispositivos
Manejo de rutas y páginas de error personalizadas
🔧 Tecnologías utilizadas
Vue 3: Framework progresivo para construir interfaces de usuario
Vuetify 3: Biblioteca de componentes Material Design para Vue
Vue Router: Enrutamiento oficial para aplicaciones Vue.js
Vite: Herramienta de compilación ultrarrápida
Axios: Cliente HTTP para realizar peticiones al backend
🚀 Instalación y configuración
Requisitos previos
Node.js (v16.x o superior)
npm (v8.x o superior) o yarn (v1.22.x o superior)
Git
Pasos para la instalación
Clonar el repositorio
Instalar dependencias
Configurar variables de entorno
Crea un archivo .env en la raíz del proyecto con la siguiente estructura:

Iniciar el servidor de desarrollo
La aplicación estará disponible en http://localhost:5173

📁 Estructura del proyecto
📘 Comandos disponibles
🔌 Configuración del Backend
La aplicación frontend se comunica con una API REST. Para configurar el backend:

Sigue las instrucciones de instalación en el directorio prueba-back-microsystem
Asegúrate de que el servidor backend esté ejecutándose en la URL especificada en tu archivo .env
Verifica que los endpoints estén accesibles:
POST /api/auth/login - Autenticación
GET /api/recibos - Lista de recibos
GET /api/recibos/:id - Detalle de un recibo
🚢 Despliegue a producción
Compilar la aplicación
Desplegar los archivos generados
Los archivos compilados estarán disponibles en el directorio dist/. Estos archivos pueden ser desplegados en cualquier servidor web estático como:

Netlify
Vercel
AWS S3 + CloudFront
GitHub Pages
Ejemplo de configuración para Netlify (netlify.toml):

💻 Desarrollo
Crear nuevos componentes
Para crear un nuevo componente:

Crea un archivo .vue en el directorio src/components/
Sigue la estructura de componentes Vue 3 con Composition API:
Agregar nuevas rutas
Para agregar una nueva página:

Crea el componente de la página en src/pages/
Agrega la ruta en src/router/index.js:
📜 Licencia
Este proyecto está bajo la Licencia MIT. Consulta el archivo LICENSE para más detalles.

👥 Contribución
Si deseas contribuir a este proyecto:

Haz un fork del repositorio
Crea una rama para tu característica (git checkout -b feature/amazing-feature)
Realiza tus cambios
Haz commit de tus cambios (git commit -m 'Add some amazing feature')
Push a la rama (git push origin feature/amazing-feature)
Abre un Pull Request
Desarrollado con ❤️ para MicroeDoc